name: Publish Solution
on: [ workflow_dispatch, workflow_call ]
jobs:
  get_version:
    uses: ./.github/workflows/get-version.yml
    
  publish_windows:
    name: "Create Windows Artifacts"
    needs: [ get_version ]
    runs-on: windows-latest
    steps:
      - name: "Checkout Repository"
        uses: actions/checkout@v4
      - name: "Setup .NET Cli"
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'
      - name: "Build Solution"
        run: dotnet publish -r win-x64 --self-contained -p:Version="${{ needs.get_version.outputs.version }}" -p:FileVersion="${{ needs.get_version.outputs.version }}" -p:InformationalVersion="${{ needs.get_version.outputs.version }}"
      - name: "Upload Artifacts"
        uses: actions/upload-artifact@v4
        with:
          name: windows-artifacts
          path: |
            ./FaderSyncPlugin/bin/Release/net8.0/win-x64/package/*.zip
            ./FaderSyncPlugin/bin/Release/net8.0/win-x64/publish/*
  
  publish_linux:
    name: "Create Linux Artifacts"
    needs: [ get_version ]
    runs-on: ubuntu-22.04
    steps:
      - name: "Checkout Repository"
        uses: actions/checkout@v4
      - name: "Setup AOT Dependencies"
        run: |
          sudo apt update
          sudo apt install clang zlib1g-dev -y
      - name: "Setup .NET Cli"
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'
      - name: "Build Solution"
        run: dotnet publish -r linux-x64 --self-contained -p:Version="${{ needs.get_version.outputs.version }}" -p:FileVersion="${{ needs.get_version.outputs.version }}" -p:InformationalVersion="${{ needs.get_version.outputs.version }}"
      - name: "Upload Artifacts"
        uses: actions/upload-artifact@v4
        with:
          name: linux-artifacts
          path: |
            ./FaderSyncPlugin/bin/Release/net8.0/linux-x64/package/*.zip
            ./FaderSyncPlugin/bin/Release/net8.0/linux-x64/publish/*